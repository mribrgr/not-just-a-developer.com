apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghostfolio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghostfolio
  template:
    metadata:
      labels:
        app: ghostfolio
    spec:
      initContainers:
        - name: check-db
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -zv postgres 5432; do echo "Waiting for db"; sleep 2; done;']
        - name: check-redis
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -zv redis 6379; do echo "Waiting for redis"; sleep 2; done;']
      containers:
        - name: ghostfolio
          image: ghostfolio/ghostfolio:latest
          envFrom:
            - secretRef:
                name: ghostfoliosecret
          ports:
            - containerPort: 3333
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 3333
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 3333
            initialDelaySeconds: 30
            periodSeconds: 5
          volumeMounts:
            - name: ghostfolio-storage
              mountPath: /var/lib/ghostfolio
      volumes:
        - name: ghostfolio-storage
          persistentVolumeClaim:
            claimName: ghostfolio-pvc